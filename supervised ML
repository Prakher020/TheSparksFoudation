{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Task1.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyPeLdm/V7wIiRcYUp9ZNICm",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/gist/Prakher020/fdc6eb5a5eb75bb53be0abd4a0e3d432/task1.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ACZ3cLS66hlW"
      },
      "source": [
        "\n",
        "Import various Libraries"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sjs30cgV6mlE"
      },
      "source": [
        "# importing the required libraries\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt \n",
        "import seaborn as sns\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.linear_model import LinearRegression\n",
        "from sklearn.metrics import mean_absolute_error"
      ],
      "execution_count": 1,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "__B4Mmlw6p5F"
      },
      "source": [
        "Import the Data from the link"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 359
        },
        "id": "0gxTZl7I6to1",
        "outputId": "3293f207-076b-4a81-8188-27685a17cbb1"
      },
      "source": [
        "# Reading the Data \n",
        "data = pd.read_csv('http://bit.ly/w-data')\n",
        "data.head(10) # taking 10 data points"
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Hours</th>\n",
              "      <th>Scores</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2.5</td>\n",
              "      <td>21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>5.1</td>\n",
              "      <td>47</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3.2</td>\n",
              "      <td>27</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>8.5</td>\n",
              "      <td>75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3.5</td>\n",
              "      <td>30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>1.5</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>9.2</td>\n",
              "      <td>88</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>5.5</td>\n",
              "      <td>60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>8.3</td>\n",
              "      <td>81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>2.7</td>\n",
              "      <td>25</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Hours  Scores\n",
              "0    2.5      21\n",
              "1    5.1      47\n",
              "2    3.2      27\n",
              "3    8.5      75\n",
              "4    3.5      30\n",
              "5    1.5      20\n",
              "6    9.2      88\n",
              "7    5.5      60\n",
              "8    8.3      81\n",
              "9    2.7      25"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 2
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "naX9AygmAz0L"
      },
      "source": [
        "Data description\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        },
        "id": "snVEvidxA4X7",
        "outputId": "273abe8a-4233-4bd4-d9d0-6b5ff3f0ad9b"
      },
      "source": [
        "data.describe()"
      ],
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Hours</th>\n",
              "      <th>Scores</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>25.000000</td>\n",
              "      <td>25.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>5.012000</td>\n",
              "      <td>51.480000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>2.525094</td>\n",
              "      <td>25.286887</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.100000</td>\n",
              "      <td>17.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>2.700000</td>\n",
              "      <td>30.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>4.800000</td>\n",
              "      <td>47.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>7.400000</td>\n",
              "      <td>75.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>9.200000</td>\n",
              "      <td>95.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           Hours     Scores\n",
              "count  25.000000  25.000000\n",
              "mean    5.012000  51.480000\n",
              "std     2.525094  25.286887\n",
              "min     1.100000  17.000000\n",
              "25%     2.700000  30.000000\n",
              "50%     4.800000  47.000000\n",
              "75%     7.400000  75.000000\n",
              "max     9.200000  95.000000"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "au4u4AXo6vkt"
      },
      "source": [
        "Validating Data for NULL values"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aT7fmA5a606N",
        "outputId": "12274f8b-9c1e-4bf5-8ccf-6032ea7bdbfe"
      },
      "source": [
        "# Checking for any null value in the Dataset\n",
        "data.isnull == True"
      ],
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "9eIOcYc665oj"
      },
      "source": [
        "Visualize the data using Scatter Plot\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 303
        },
        "id": "-cFB-aR-7nHx",
        "outputId": "19b86ec6-b7fa-402d-ec67-251e44644568"
      },
      "source": [
        "sns.set_style('darkgrid')\n",
        "sns.scatterplot(y= data['Scores'], x= data['Hours'])\n",
        "plt.title('Marks Scored Vs Study Hours',size=20)\n",
        "plt.ylabel('Percentage Score ', size=12)\n",
        "plt.xlabel('Hours Studied', size=12)\n",
        "plt.show()"
      ],
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYEAAAEeCAYAAABsaamyAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nO3deVxU9f7H8dewKYJIKougLWqCFwUXXEtMVNCQRBNyCXfRrkmpmeaS5TW1xbTFrmGl6M2uooglFiouqLimhuZWeTVBWUQRFRAY5vcHMT+JAQZlFobP8/Hw8XDOOTPnPcPM+Zxzvud8vwqVSqVCCCFErWRm6ABCCCEMR4qAEELUYlIEhBCiFpMiIIQQtZgUASGEqMWkCAghRC0mRcCIubm5ERoaaugYtUJycjJubm7MmjXL0FFqvCNHjuDm5sZnn31m6ChCC1IEKN7Yurm54e7uzp9//lnucqGhoeplo6Oj9ZhQfy5dusTcuXPp27cvbdu2pV27dvj6+jJ27Fg+//xzbty4YeiIBjd06FDc3NzYt29fpcv6+/vj5ubG2bNnqzXDwYMHmTx5Ms8++yxt2rShU6dO+Pv7Ex4eztq1a3nw9h9TK3DR0dGVvp+SQiQ7UZWzMHQAY2FhYUFhYSGbNm1i2rRpZeZfvnyZo0ePqpczRYcOHWLixIncv3+f9u3b06NHD2xtbUlPT+fkyZMcPHiQDh060LhxY0NHNaiQkBBOnjxJVFQUPXv2LHe5o0ePcvnyZdq0acM//vGPalv/ypUrWbZsGRYWFvTo0YOnnnoKMzMzrl69yrFjx4iLi2P48OFYWMjPW1ROviV/adSoEQ4ODkRHRxMeHl7mBxQVFQVAr1692LlzpyEi6tz8+fO5f/8+S5YsYdCgQWXmnz9/ngYNGhggmXF5/vnnWbRoEXv37uXGjRvlFsWS78xLL71UbetOSUnh008/xdbWlvXr1+Pm5lZqflFREQcPHsTc3Lza1ilMm5wOekBISAgZGRns3bu31PSCggK2bNlC+/btadGihcbnnjlzhoULF/LCCy/QuXNn2rZti5+fH0uWLOH27dtlli85pI2OjiYhIYHQ0FA6duxY5ketyVdffYW7uztDhw4lKysLgPz8fNauXcugQYPo1KkTXl5e+Pr68sorr5CYmFjpa2ZmZnLlyhXq16+vsQAAuLu706RJkzLTU1NTWbhwIX5+fnh6etK5c2eGDBnCihUryix75swZpkyZQrdu3WjTpg29evXinXfeIT09vcyys2bNws3NjatXr7Ju3ToCAwPx9PQsdYiflZXF0qVL6d+/P56ennTs2JFRo0Zx4MABje/h7t27LF68GB8fH9q2bUu/fv1YvXo1Vek9pW7durzwwgsUFBSUe1owOzubuLg46tWrR0BAgHr6jRs3eP/99/H396ddu3Z4e3vj7+/PrFmzuHr1aqXr/uWXX1AqlXTp0kXjd8XMzIwePXqgUCgA+Oyzz+jduzcAW7ZsUZ/OfPCU5oPfRU3KO61y48YNZs+eTffu3fH09GTgwIFs2bJF42u89NJLuLu7k5ycrHH+N998g5ubG19//XWln8Gjys/PJyIigsDAQLy8vOjQoQPDhw9n+/btZZatrH3D19cXX1/fUtO0+W0fP36cSZMm4ePjQ5s2bXjmmWcICQnh888/r943qwU5EnhAQEAAS5YsISoqij59+qin7969m8zMTN544w2uXLmi8bkbN25k165ddOrUie7du1NUVMSvv/7K6tWrSUhIYOPGjdja2pZ5XlxcHPv378fHx4ehQ4dy7dq1cvMVFRWxaNEi1q1bh5+fHx999BF16tQB4K233mLbtm20atWKgQMHUrduXdLT0/n555/Zv38/3bt3r/C9169fHwsLC3JyckhPT8fR0VGbj4zTp08zfvx4srKy6NSpE3379iUvL4/ff/+dzz//nMmTJ6uX3bNnD1OmTAGKz5W7uLjw66+/8t133xEfH8/69etp1qxZmXW89957HD9+nJ49e9KzZ0/1Xm5KSgqhoaGkpKTg7e1Njx49yM3NZc+ePYwfP54FCxYQEhKifp38/HxGjx7N6dOncXd3JzAwkDt37vDFF19w9OhRrd5viZCQEL799ls2b95MWFhYmfnff/899+/fJyQkBBsbGwByc3MZNmwYf/75J8888wy+vr6oVCquXbtGfHw8/v7+Gt//gx577DEArl69ilKprHSPv3PnzowcOZK1a9fi7u5e6nvdunXrKr3nB928eZOhQ4dy9epVOnbsSMeOHcnIyGD+/Pk888wzZZYfNmwYp06dIioqiqlTp5aZv2HDBqysrMrdAaku+fn5jBs3jqNHj9K8eXOGDx9OXl4ecXFxTJ06lfPnz2s8Hfww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GDNB1XMVFanYdSGD6VGn1N00Lw1uRx83B8zMqqcamMpnVRWWluYap2vVJrB//3527dqFtbU1AE899RSLFy+mb9++VQqRkJCAh4cHjRs3Boq7o0hPT8fR0ZH09HQaNmxY6WsolSqysnK0Wp+9fT2tl9UnY8xljJlAclWFMWaCqufKyCtUFwAo7p1zetQposO6VlsPnabyWVWFg0N9jdO1Oh1Up04dbt68WWrarVu3sLKqWo95sbGxBAQEqB/7+voSExMDQExMDL17967S6wkhTE+tHKXMgLQqAkOGDGHs2LF899137Nu3j++++45x45AvPYYAACAASURBVMYREhKi9YpycnJITEzEz89PPS0sLIyDBw/i5+dHYmIiYWFhVX8HQgiTYkrdNNcEWh1bvfLKKzg6OrJt2zb16Zvx48czZMgQrVdUr149jhw5UmraY489RmRkZNUSCyEqpige+aq4d8s6OFib16jOzUq6af770I01tZdOY6dVEVAoFAwZMqRKG30hhAGYwti3JtRNc02g1emghQsXcuLEiVLTTpw4IUNLCmFkTGbs21o0SpmhaVUEtm3bRps2bUpNa9OmDdu2bdNJKCHEw5FGVVFVWhUBhULB328nKOlITghhPKRRVVSVVkXA29ub5cuXqzf6RUVFfPbZZ3h7e+s0nBCiakxp7FuhH1p9M+bMmcPEiRN59tlncXFx4dq1azg6OrJy5Upd5xNCVIU0qooq0qoIODs7s2XLFpKSkrh+/TpNmjTB09MTMzOtDiSEEPpkImPfCv3QeituZmZGu3btcHNzIyMjg+vXr+sylxBCCD2osAgsXry41EAyMTExDBgwgHnz5tG/f3/27dun84BCCCF0p8IisGvXLjp16qR+/PHHHzNnzhwOHz7Mu+++y4oVK3QeUAghhO5UWARu3bqFi4sLABcvXiQrK4vg4GAAXnjhBS5fvqzzgEIIIXSnwiJQv359bty4AcDx48dp06aNuufQwsLCMvcOCCGEqFkqvDqof//+TJ06lb59+7J69WomTJignvfLL7/QrFkznQcUQvxNDe8gThiXCovA9OnT+fLLL0lMTCQkJIRhw4ap5507d46hQ4fqPKAQ4gEVdRAnxEPQanhJY1JQoJSRxXTAGDOB5Pq7jLxCBkccLtU/UF1LM6LDuvK0s518VloyxkxgxCOLCSGMg3QQJ6qb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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "gEOeOnl27-LA"
      },
      "source": [
        "Plotting a Regression line to confirm the corelation between the \"Marks Percentage\" and \"Hours Studied\""
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 354
        },
        "id": "zbnstWit8fSm",
        "outputId": "55c2694c-0828-44b2-975a-f20afd1669b6"
      },
      "source": [
        "sns.regplot(x= data['Hours'], y= data['Scores'])\n",
        "plt.title('Regression Plot',size=20)\n",
        "plt.ylabel('Percentage Score', size=13)\n",
        "plt.xlabel('Hours Studied', size=13)\n",
        "plt.show()\n",
        "print(data.corr())"
      ],
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "           Hours    Scores\n",
            "Hours   1.000000  0.976191\n",
            "Scores  0.976191  1.000000\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "CjIil4aw8oSm"
      },
      "source": [
        "Data preprocessing and modelling"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8A_CjnE89aOr"
      },
      "source": [
        "# Defining X and y from the Data\n",
        "X = data.iloc[:, :-1].values  \n",
        "y = data.iloc[:, 1].values\n",
        "\n",
        "# Spliting the Data in twotraining set and data set\n",
        "train_X, value_X, train_y, value_y = train_test_split(X, y, random_state = 0)\n"
      ],
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "0dU22TaW9cC9"
      },
      "source": [
        "Fitting the Data"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xpMf5zAc9ixL",
        "outputId": "89af06f0-d273-4568-c518-1a79f607e79f"
      },
      "source": [
        "regression = LinearRegression()\n",
        "regression.fit(train_X, train_y)\n",
        "print(\"---------Model Trained---------\")"
      ],
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "---------Model Trained---------\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "qQ22H_YB9sRi"
      },
      "source": [
        "Data Prediction"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 266
        },
        "id": "UeuRIONu9uer",
        "outputId": "e074acff-ddec-4297-b06e-b2a98c637fae"
      },
      "source": [
        "predict_y = regression.predict(value_X)\n",
        "predictMark = pd.DataFrame({'Hours': [i[0] for i in value_X], \n",
        "                           'Predicted Marks': [k for k in predict_y]})\n",
        "predictMark"
      ],
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Hours</th>\n",
              "      <th>Predicted Marks</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1.5</td>\n",
              "      <td>16.844722</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>3.2</td>\n",
              "      <td>33.745575</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>7.4</td>\n",
              "      <td>75.500624</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2.5</td>\n",
              "      <td>26.786400</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5.9</td>\n",
              "      <td>60.588106</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>3.8</td>\n",
              "      <td>39.710582</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>1.9</td>\n",
              "      <td>20.821393</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Hours  Predicted Marks\n",
              "0    1.5        16.844722\n",
              "1    3.2        33.745575\n",
              "2    7.4        75.500624\n",
              "3    2.5        26.786400\n",
              "4    5.9        60.588106\n",
              "5    3.8        39.710582\n",
              "6    1.9        20.821393"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "tP2hg9Cf9zcW"
      },
      "source": [
        "Predicted value VS Actual Value"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 266
        },
        "id": "XxFePqGd96VD",
        "outputId": "dbdc3d58-04d8-458f-86d5-a259f987dffc"
      },
      "source": [
        "compare_scores = pd.DataFrame({'Actual Marks': value_y, 'Predicted Marks': predict_y})\n",
        "compare_scores"
      ],
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Actual Marks</th>\n",
              "      <th>Predicted Marks</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>20</td>\n",
              "      <td>16.844722</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>27</td>\n",
              "      <td>33.745575</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>69</td>\n",
              "      <td>75.500624</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>30</td>\n",
              "      <td>26.786400</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>62</td>\n",
              "      <td>60.588106</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>35</td>\n",
              "      <td>39.710582</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>24</td>\n",
              "      <td>20.821393</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Actual Marks  Predicted Marks\n",
              "0            20        16.844722\n",
              "1            27        33.745575\n",
              "2            69        75.500624\n",
              "3            30        26.786400\n",
              "4            62        60.588106\n",
              "5            35        39.710582\n",
              "6            24        20.821393"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 303
        },
        "id": "B0gfKwQZ-Ca0",
        "outputId": "1d44681f-0fe4-4c62-e1b3-c733fe99d229"
      },
      "source": [
        "#Data Comparison using data visualization\n",
        "plt.scatter(x=value_X, y=value_y, color='red')\n",
        "plt.plot(value_X, predict_y, color='Blue')\n",
        "plt.title('Actual vs Predicted', size=20)\n",
        "plt.ylabel('Percentage Score', size=13)\n",
        "plt.xlabel('Hours Studied', size=13)\n",
        "plt.show()"
      ],
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "vWS14wLV-MeB"
      },
      "source": [
        "Evaluating Data Model"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mhV4b-Vb-TEh",
        "outputId": "77d2960f-64a0-4be3-9d58-dc4b2fef0ee7"
      },
      "source": [
        "# Calculating the accuracy of the model\n",
        "print('Mean absolute error: ',mean_absolute_error(value_y,predict_y))\n"
      ],
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Mean absolute error:  4.130879918502482\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "QpsV8Rdf-W1g"
      },
      "source": [
        "Predicted score of a student who studies for 9.25 hr/day"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "47g3brkG-hoo",
        "outputId": "89c5d7e4-312d-4827-eebc-c25ac60116e6"
      },
      "source": [
        "hours = [9.25]\n",
        "answer = regression.predict([hours])\n",
        "print(\"Score = {}\".format(round(answer[0],3)))\n"
      ],
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Score = 93.893\n"
          ],
          "name": "stdout"
        }
      ]
    }
  ]
}
